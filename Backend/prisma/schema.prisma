generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Contrato {
  id           Int       @id @default(autoincrement())
  descuento    Decimal   @db.Decimal(2,1)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  cliente      Cliente?  @relation // Relación con Cliente
}

model Cliente {
  id                Int       @id @default(autoincrement())
  nombre            String    @db.VarChar(64)
  direccion         String    @db.VarChar(128)
  telefono          String    @db.VarChar(15)
  nombreDependencia String    @db.VarChar(64)
  id_medidor        String    @db.VarChar(12)
  deuda             Decimal   @db.Decimal(2,1)
  contrato_id       Int?      // Relación opcional con Contrato
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  contrato          Contrato? @relation(fields: [contrato_id], references: [id]) // Relación con Contrato
  convenios         Convenio[] // Relación con Convenio (uno a muchos)
  compras           Compra[]   // Relación con Compra (uno a muchos)
}

model Convenio {
  id            Int       @id @default(autoincrement())
  descuento     Decimal   @db.Decimal(2,1)
  fecha_limite  DateTime
  pagado        Boolean
  clienteId     Int       // Relación con Cliente
  cliente       Cliente   @relation(fields: [clienteId], references: [id]) // Relación inversa
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Compra {
  id                 Int        @id @default(autoincrement())
  clienteId          Int        // Relación con Cliente
  cliente            Cliente    @relation(fields: [clienteId], references: [id]) // Relación inversa
  servicioId         Int
  servicio           Servicio  @relation(fields: [servicioId], references: [id])
  fecha              DateTime
  cantidadServicio   Int
  cobro              Decimal   @db.Decimal(2,1)
  direccionCompra    String
  plantaId           Int
  planta             Planta    @relation(fields: [plantaId], references: [id])
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model Usuario {
  id               Int       @id @default(autoincrement())
  nombre           String    @db.VarChar(64)
  telefono         String    @db.VarChar(15)
  correo           String    @db.VarChar(48)
  contrasenia      String    @db.VarChar(64)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model TipoServicio {
  id              Int       @id @default(autoincrement())
  nombre          String    @db.VarChar(48)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Servicio {
  id              Int          @id @default(autoincrement())
  TiposervicioId  Int
  TipoServicio    TipoServicio @relation(fields: [TipoServicioId], references: [id])
  descripcion     String       @db.VarChar(128)
  costo           Decimal      @db.Decimal(2,1)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

model Planta {
  id          Int      @id @default(autoincrement())
  nombre      String   @db.VarChar(64)
  direccion   String   @db.VarChar(128)
  telefono    String   @db.VarChar(15)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}